"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[671],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||s;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9881:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const s={sidebar_position:1},a="Introduction",i={unversionedId:"intro",id:"intro",title:"Introduction",description:"R\xe9sum\xe9",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/projet_serveur_IRC/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Version client serveur",permalink:"/projet_serveur_IRC/docs/version1"}},u={},c=[{value:"R\xe9sum\xe9",id:"r\xe9sum\xe9",level:2},{value:"Context du projet",id:"context-du-projet",level:2},{value:"Unit\xe9s d&#39;enseignements :",id:"unit\xe9s-denseignements-",level:2}],l={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("h2",{id:"r\xe9sum\xe9"},"R\xe9sum\xe9"),(0,o.kt)("p",null,"Le but de ce mini-projet est de r\xe9aliser un service de discussion en ligne (Internet Relay Chat ou IRC) en Python.\nIl s\u2019agit d\u2019un syst\xe8me client/serveur permettant \xe0 des utilisateurs de discuter en direct en s\u2019envoyant des messages.\nLes utilisateurs peuvent discuter en groupe \xe0 travers des canaux de discussion, mais \xe9galement deux-\xe0-deux de\nmani\xe8re priv\xe9e."),(0,o.kt)("p",null,"Le principe est assez simple : des utilisateurs se connectent \xe0 un serveur IRC en utilisant un programme client,\ntapent des commandes et le serveur ex\xe9cute ces commandes. Le r\xe9seau IRC est constitu\xe9 de serveurs connect\xe9s entre\neux, sans topologie particuli\xe8re. Chaque client se connecte \xe0 un des serveurs et les commandes (ou messages) qu\u2019il\ntape sont communiqu\xe9es par son serveur de rattachement aux autres serveurs, jusqu\u2019aux clients destinataires."),(0,o.kt)("p",null,"Les commandes accept\xe9es par un serveur sont assez nombreuses et tout est d\xe9crit dans un protocole d\xb4ecrit dans la RFC1459"),(0,o.kt)("h2",{id:"context-du-projet"},"Context du projet"),(0,o.kt)("p",null,"Le projet est r\xe9alis\xe9 dans le cadre du module Programmation concurrente et distribu\xe9e, assur\xe9 par ",(0,o.kt)("a",{parentName:"p",href:"https://www.lri.fr/~conchon/"},"Mr Conchon"),"."),(0,o.kt)("p",null,"Le projet repr\xe9sente \xe9galement un point d'entr\xe9e au module Blockchain assur\xe9 par ",(0,o.kt)("a",{parentName:"p",href:"https://www.lri.fr/~conchon/"},"Mr Conchon")," \xe9galement"),(0,o.kt)("h2",{id:"unit\xe9s-denseignements-"},"Unit\xe9s d'enseignements :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.lri.fr/~conchon/progcd/"},"Programmation concurrente et distribu\xe9e (2022-2023)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.lri.fr/~conchon/blockchain/"},"Blockchain (2022-2023)"))))}p.isMDXComponent=!0}}]);